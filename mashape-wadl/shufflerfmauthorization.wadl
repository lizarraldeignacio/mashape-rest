<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<application>
    <doc>tHE SHUFFLER FM API ALLOWS ANYONE TO BUILD THEIR OWN PROGRAMS USING SHUFFLER FM DATA BESIDES ACCESSING PUBLIC DATA THE LATEST API V ENABLES YOU TO CREATE PERSONALIZED APPS IT S REST AND SPEAKS JSON OVER HTTPS</doc>
    <resources base="https://marcelcorso-shufflerfm---authorization.p.mashape.com/">
        <resource uri="auth/">
            <method displayName="AUTHORIZATION CODE" id="5721" name="GET">
                <doc>This is the first step in the authorization process. You ask the Shuffler.fm user to authorize you to access data on user's behalf. If the user is not logged in, he is redirect to a login page. Otherwise we ask him for permission.</doc>
                <request>
                    <param name="appKey" required="true" style="query" type="xsd:string">
                        <doc>your app s key</doc>
                    </param>
                    <param name="redirUri" required="true" style="query" type="xsd:string">
                        <doc>the URL to redirect back to</doc>
                    </param>
                    <param name="scope" required="true" style="query" type="xsd:string">
                        <doc>the permission scope for the authorization multiple scopes can be in a comma separated list</doc>
                    </param>
                </request>
            </method>
        </resource>
        <resource uri="token/">
            <method displayName="ACCESS TOKEN" id="5720" name="POST">
                <doc>For requests where you need user information or want to manage users' data, the permission of the user is needed. On this API authorizations are managed via Shuffler-flavoured, three-legged OAuth 2.0. A nice short description of how OAuth 2.0 works: https://github.com/Mashape/mashape-oauth/blob/master/FLOWS.md#oauth-2-three-legged. Scopes Scopes define which part of the user's data may be accessed by the app and what the app may do with it (read/write). The Shuffler.fm API v2 defines five scopes: users.r: Read user's profile info. users.favorites.r: Read user's favorites. users.favorites.m: Manage user's favorites. users.subscriptions.r: Read user's subscriptions. users.subscriptions.m: Manage user's subscriptions.</doc>
                <request/>
            </method>
        </resource>
    </resources>
</application>
